Well, i have simple console programm (written in php), which outputs some information and then wait for user input and after input, again outputs some another information.  I need to write nodejs programm that will:  Catch first output from this program Somehow saving this interaction in order to send command to it later. Process and show new text to user and wait for input (inside node) Grab user input and passes it to opened programm Show last output from php programm in node end nodejs To keep it simple lets pretend the program is:  <?php $line = readline("Enter your command: "); print 'Thank you for submitting data.'; ?> My main problem is that i don't know how to handle "holding" php program opened.  What i ended up for now in node is this:  const readline = require('readline'); const exec = require('child_process').exec; const rl = readline.createInterface({   input: process.stdin,   output: process.stdout });  exec('php programm.php', function(error, stdout, stderr){   console.log(stdout);   rl.question(stdout.toUpperCase(), (answer) => {     exec(answer);   }) }); But that doesn't work. Thanks in advance!
well, i have simple console programm (written in php), which outputs some information and then wait for user input and after input, again outputs some another information.  i need to write nodejs programm that will:  catch first output from this program somehow saving this interaction in order to send command to it later. process and show new text to user and wait for input (inside node) grab user input and passes it to opened programm show last output from php programm in node end nodejs to keep it simple lets pretend the program is:  <?php $line = readline("enter your command: "); print 'thank you for submitting data.'; ?> my main problem is that i don't know how to handle "holding" php program opened.  what i ended up for now in node is this:  const readline = require('readline'); const exec = require('child_process').exec; const rl = readline.createinterface({   input: process.stdin,   output: process.stdout });  exec('php programm.php', function(error, stdout, stderr){   console.log(stdout);   rl.question(stdout.touppercase(), (answer) => {     exec(answer);   }) }); but that doesn't work. thanks in advance!
